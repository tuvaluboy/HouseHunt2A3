@model HouseHunt2.Models.Preference

@{
    ViewBag.Title = "Create";
}
<br>
<h2 align="center">Create Preferences</h2><button class="glyphicon glyphicon-question-sign" type="button" data-toggle="modal" data-target="#preferences"></button>

<div id="preferences" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">CREATE YOUR PREFERENCES</h4>
            </div>

            <div class="modal-body">
                <p style="font-variant-caps:initial">Create your personalized preference on the type of property you want and we will send you notifications if any properties match your preference.</p>
            </div>
        </div>
    </div>
</div>

<div class="box">
    @using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3 align="center">Select Details </h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" align="center">
            <div>
                @Html.EditorFor(model => model.Bedroom, new { htmlAttributes = new { @class = "form-control", @placeholder = "Bedrooms" } })
                @Html.ValidationMessageFor(model => model.Bedroom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" align="center">
            <div>
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @placeholder = "Location" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" align="center">
            <div>
                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control", @placeholder = "Area" } })
                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" align="center">
            <div>
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @placeholder = "Price" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" align="center">
            <div>
                @Html.EditorFor(model => model.Baths, new { htmlAttributes = new { @class = "form-control", @placeholder = "Bathrooms" } })
                @Html.ValidationMessageFor(model => model.Baths, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" align="center">
            <div>
                @Html.EditorFor(model => model.NearbyLocation, new { htmlAttributes = new { @class = "form-control", @placeholder = "Near By Locations" } })
                @Html.ValidationMessageFor(model => model.NearbyLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Id, "Id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @@Html.DropDownList("Id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group" align="center">
            <input type="submit" value="Create" class="butt" />
        </div>
    </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
